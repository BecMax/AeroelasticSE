from openmdao.api import Component
from numpy import zeros
class FstModel(Component):
	def __init__(self):
                super(FstModel,self).__init__()

		# Description
		self.add_param('description', val='')

                ###################
		# Fst file vartrees
                ###################

		#self.fst_sim_ctrl = FstSimCtrl()
		self.add_param('fst_sim_ctrl:Echo', val=False)
		self.add_param('fst_sim_ctrl:AbortLevel', val='')
		self.add_param('fst_sim_ctrl:TMax', val=0.)
		self.add_param('fst_sim_ctrl:DT', val=0.)
		self.add_param('fst_sim_ctrl:InterpOrder', val=0)
		self.add_param('fst_sim_ctrl:NumCrctn', val=0)
		self.add_param('fst_sim_ctrl:DT_UJac', val=0.)
		self.add_param('fst_sim_ctrl:UJacSclFact', val=0.)
		self.add_param('fst_sim_ctrl:ADAMSPrep', val=0)
		self.add_param('fst_sim_ctrl:AnalMode', val=0)

		#self.ftr_swtchs_flgs = FtrSwtchsFlgs()
		self.add_param('ftr_swtchs_flgs:CompElast', val=0)
		self.add_param('ftr_swtchs_flgs:CompInflow', val=0)
		self.add_param('ftr_swtchs_flgs:CompAero', val=0)
		self.add_param('ftr_swtchs_flgs:CompServo', val=0)
		self.add_param('ftr_swtchs_flgs:CompHydro', val=0)
		self.add_param('ftr_swtchs_flgs:CompSub', val=0)
		self.add_param('ftr_swtchs_flgs:CompMooring', val=0)
		self.add_param('ftr_swtchs_flgs:CompIce', val=0)
		self.add_param('ftr_swtchs_flgs:CompNoise', val=0)

		#self.input_files = InputFiles()
		self.add_param('input_files:EDFile', val='')
		self.add_param('input_files:BDBldFile1', val='')
		self.add_param('input_files:BDBldFile2', val='')
		self.add_param('input_files:BDBldFile3', val='')
		self.add_param('input_files:InflowFile', val='')
		self.add_param('input_files:AeroFile', val='')
		self.add_param('input_files:ServoFile', val='')
		self.add_param('input_files:HydroFile', val='')
		self.add_param('input_files:SubFile', val='')
		self.add_param('input_files:MooringFile', val='')
		self.add_param('input_files:IceFile', val='')
		self.add_param('input_files:ADFile', val='')
		self.add_param('input_files:NoiseFile', val='')
		self.add_param('input_files:ADAMSFile', val='')
		self.add_param('input_files:LinFile', val='')
               
		#self.fst_output_params = FstOutputParams()
		self.add_param('fst_output_params:SumPrint', val=False)
		self.add_param('fst_output_params:SttsTime', val=0.)
		self.add_param('fst_output_params:ChkptTime', val=0.)
		self.add_param('fst_output_params:DT_Out', val=0.)
		self.add_param('fst_output_params:OutFileFmt', val=0)
		self.add_param('fst_output_params:TabDelim', val=False)
		self.add_param('fst_output_params:OutFmt', val='')

		#self.visualization = Visualization()
		self.add_param('visualization:WrVTK', val=0)
		self.add_param('visualization:VTK_type', val=0)
		self.add_param('visualization:VTK_fields', val=0)
		self.add_param('visualization:VTK_fps', val=0)

                #self.linearization = Linearization()
                self.add_param('linearization:Linearize', val=False)
                self.add_param('linearization:NLinTimes', val=2)
                self.add_param('linearization:LinTimes', val=(30, 60))
                self.add_param('linearization:LinInputs', val=1)
                self.add_param('linearization:LinOutputs', val=1)
                self.add_param('linearization:LinOutJac', val=False)
                self.add_param('linearization:LinOutMod', val=False)

                ###################
		# Elastodyn vartrees
                ###################
		#self.ed_sim_ctrl = EdSimCtrl()
		self.add_param('ed_sim_ctrl:Echo', val=False)
		self.add_param('ed_sim_ctrl:Method', val=0)
		self.add_param('ed_sim_ctrl:DT', val=0.)

		#self.envir_cond = EnvirCond()
		self.add_param('envir_cond:Gravity', val=0.)

		#self.dof = DOF()
		self.add_param('dof:FlapDOF1', val=False)
		self.add_param('dof:FlapDOF2', val=False)
		self.add_param('dof:EdgeDOF', val=False)
		self.add_param('dof:TeetDOF', val=False)
		self.add_param('dof:DrTrDOF', val=False)
		self.add_param('dof:GenDOF', val=False)
		self.add_param('dof:YawDOF', val=False)
		self.add_param('dof:TwFADOF1', val=False)
		self.add_param('dof:TwFADOF2', val=False)
		self.add_param('dof:TwSSDOF1', val=False)
		self.add_param('dof:TwSSDOF2', val=False)
		self.add_param('dof:PtfmSgDOF', val=False)
		self.add_param('dof:PtfmSwDOF', val=False)
		self.add_param('dof:PtfmHvDOF', val=False)
		self.add_param('dof:PtfmRDOF', val=False)
		self.add_param('dof:PtfmPDOF', val=False)
		self.add_param('dof:PtfmYDOF', val=False)

		#self.init_conds = InitConds()
		self.add_param('init_conds:OoPDefl', val=0.0)
		self.add_param('init_conds:IPDefl', val=0.0)
		self.add_param('init_conds:BlPitch1', val=0.0)
		self.add_param('init_conds:BlPitch2', val=0.0)
		self.add_param('init_conds:BlPitch3', val=0.0)
		self.add_param('init_conds:TeetDefl', val=0.0)
		self.add_param('init_conds:Azimuth', val=0.0)
		self.add_param('init_conds:RotSpeed', val=0.0)
		self.add_param('init_conds:NacYaw', val=0.0)
		self.add_param('init_conds:TTDspFA', val=0.0)
		self.add_param('init_conds:TTDspSS', val=0.0)
		self.add_param('init_conds:PtfmSurge', val=0.0)
		self.add_param('init_conds:PtfmHeave', val=0.0)
		self.add_param('init_conds:PtfmRoll', val=0.0)
		self.add_param('init_conds:PtfmPitch', val=0.0)
		self.add_param('init_conds:PtfmYaw', val=0.0)

		#self.turb_config = TurbConfig()
		self.add_param('turb_config:NumBl', val=0)
		self.add_param('turb_config:TipRad', val=0.)
		self.add_param('turb_config:HubRad', val=0.)
		self.add_param('turb_config:PreCone1', val=0.)
		self.add_param('turb_config:PreCone2', val=0.)
		self.add_param('turb_config:PreCone3', val=0.)
		self.add_param('turb_config:HubCM', val=0.)
		self.add_param('turb_config:UndSling', val=0.)
		self.add_param('turb_config:Delta3', val=0.)
		self.add_param('turb_config:AzimB1Up', val=0.)
		self.add_param('turb_config:OverHang', val=0.)
		self.add_param('turb_config:ShftGagL', val=0.)
		self.add_param('turb_config:ShftTilt', val=0.)
		self.add_param('turb_config:NacCMxn', val=0.)
		self.add_param('turb_config:NacCMyn', val=0.)
		self.add_param('turb_config:NacCMzn', val=0.)
		self.add_param('turb_config:NcIMUxn', val=0.)
		self.add_param('turb_config:NcIMUyn', val=0.)
		self.add_param('turb_config:NcIMUzn', val=0.)
		self.add_param('turb_config:Twr2Shft', val=0.)
		self.add_param('turb_config:TowerHt', val=0.)
		self.add_param('turb_config:TowerBsHt', val=0.)
		self.add_param('turb_config:PtfmCMxt', val=0.)
		self.add_param('turb_config:PtfmCMyt', val=0.)
		self.add_param('turb_config:PtfmCMzt', val=0.)
		self.add_param('turb_config:PtfmRefzt', val=0.)

		#self.mass_inertia = MassInertia()
		self.add_param('mass_inertia:TipMass1', val=0.)
		self.add_param('mass_inertia:TipMass2', val=0.)
		self.add_param('mass_inertia:HubMass', val=0.)
		self.add_param('mass_inertia:HubIner', val=0.)
		self.add_param('mass_inertia:GenIner', val=0.)
		self.add_param('mass_inertia:NacMass', val=0.)
		self.add_param('mass_inertia:NacYIner', val=0.)
		self.add_param('mass_inertia:YawBrMass', val=0.)
		self.add_param('mass_inertia:PtfmMass', val=0.)
		self.add_param('mass_inertia:PtfmRIner', val=0.)
		self.add_param('mass_inertia:PtfmPIner', val=0.)
		self.add_param('mass_inertia:PtfmYIner', val=0.)

		#self.blade_struc = BladeStruc()
		self.add_param('blade_struc:BldNodes', val=0)
		self.add_param('blade_struc:BldFile1', val='')
		self.add_param('blade_struc:BldFile2', val='')
		self.add_param('blade_struc:BldFile3', val='')
		self.add_param('blade_struc:NBlInpSt', val=0)
		self.add_param('blade_struc:CalcBMode', val=False)
		self.add_param('blade_struc:BldFlDmp1', val=0.)
		self.add_param('blade_struc:BldFlDmp2', val=0.)
		self.add_param('blade_struc:BldEdDmp1', val=0.)
		self.add_param('blade_struc:FlStTunr1', val=0.)
		self.add_param('blade_struc:FlStTunr2', val=0.)
		self.add_param('blade_struc:AdjBlMs', val=0.)
		self.add_param('blade_struc:AdjFlSt', val=0.)
		self.add_param('blade_struc:AdjEdSt', val=0.)
		self.add_param('blade_struc:BlFract', zeros([1]))
		self.add_param('blade_struc:AeroCent', zeros([1]))
		self.add_param('blade_struc:PitchAxis', zeros([1]))
		self.add_param('blade_struc:StrcTwst', zeros([1]))
		self.add_param('blade_struc:BMassDen', zeros([1]))
		self.add_param('blade_struc:FlpStff', zeros([1]))
		self.add_param('blade_struc:EdgStff', zeros([1]))
		self.add_param('blade_struc:GJStff', zeros([1]))
		self.add_param('blade_struc:EAStff', zeros([1]))
		self.add_param('blade_struc:Alpha', zeros([1]))
		self.add_param('blade_struc:FlpIner', zeros([1]))
		self.add_param('blade_struc:EdgIner', zeros([1]))
		self.add_param('blade_struc:PrecrvRef', zeros([1]))
		self.add_param('blade_struc:PreswpRef', zeros([1]))
		self.add_param('blade_struc:FlpcgOf', zeros([1]))
		self.add_param('blade_struc:Edgcgof', zeros([1]))
		self.add_param('blade_struc:FlpEAOf', zeros([1]))
		self.add_param('blade_struc:EdgEAOf', zeros([1]))
		self.add_param('blade_struc:BldFl1Sh', zeros([1]))
		self.add_param('blade_struc:BldFl2Sh', zeros([1]))
		self.add_param('blade_struc:BldEdgSh', zeros([1]))

		#self.rotor_teeter = RotorT:eter()
		self.add_param('rotor_teeter:TeetMod', val=0)
		self.add_param('rotor_teeter:TeetDmpP', val=0.0)
		self.add_param('rotor_teeter:TeetDmp', val=0.0)
		self.add_param('rotor_teeter:TeetCDmp', val=0.0)
		self.add_param('rotor_teeter:TeetSStP', val=0.0)
		self.add_param('rotor_teeter:TeetHStP', val=0.0)
		self.add_param('rotor_teeter:TeetSSSp', val=0.0)
		self.add_param('rotor_teeter:TeetHSSp', val=0.0)

		#self.drivetrain = DriveTrai:()
		self.add_param('drivetrain:GBoxEff', val=0.0)
		self.add_param('drivetrain:GBRatio', val=0.0)
		self.add_param('drivetrain:DTTorSpr', val=0.0)
		self.add_param('drivetrain:DTTorDmp', val=0.0)
		self.add_param('drivetrain:GBRevers', val=0.0)
		self.add_param('drivetrain:DynBrkFi', val=0.0)

		#self.furling = Furling()
		self.add_param('furling:Furling', val=False)
		self.add_param('furling:FurlFile', val='')

		#self.platform = Platform()
		self.add_param('platform:PtfmModel', val=0)
		self.add_param('platform:PtfmFile', val='')

		#self.tower = Tower()
		self.add_param('tower:TwrNodes', val=0)
		self.add_param('tower:TwrFile', val='')
		self.add_param('tower:NTwInptSt', val=0)
		self.add_param('tower:CalcTMode', val=False)
		self.add_param('tower:TwrFADmp1', val=0.)
		self.add_param('tower:TwrFADmp2', val=0.)
		self.add_param('towSr:TwrSSDmp1', val=0.)
		self.add_param('towSr:TwrSSDmp2', val=0.)
		self.add_param('towSr:FAStTunr1', val=0.)
		self.add_param('towSr:FAStTunr2', val=0.)
		self.add_param('towSr:SSStTunr1', val=0.)
		self.add_param('towSr:SSStTunr2', val=0.)
		self.add_param('towSr:AdjTwMa', val=0.)
		self.add_param('towSr:AdjFASt', val=0.)
		self.add_param('towSr:AdjSSSt', val=0.)
		self.add_param('towSr:HtFract', val=zeros([1]))
		self.add_param('towSr:TMassDen', val=zeros([1]))
		self.add_param('towSr:TwFAStif', val=zeros([1]))
		self.add_param('towSr:TwSSStif', val=zeros([1]))
		self.add_param('towSr:TwGJStif', val=zeros([1]))
		self.add_param('towSr:TwEAStif', val=zeros([1]))
		self.add_param('towSr:TwFAIner', val=zeros([1]))
		self.add_param('towSr:TwSSIner', val=zeros([1]))
		self.add_param('towSr:TwFAcgOf', val=zeros([1]))
		self.add_param('towSr:TwSScgOf', val=zeros([1]))
		self.add_param('towSr:TwFAM1Sh', val=zeros([1]))
		self.add_param('towSr:TwFAM2Sh', val=zeros([1]))
		self.add_param('towSr:TwSSM1Sh', val=zeros([1]))
		self.add_param('towSr:TwSSM2Sh', val=zeros([1]))

		#self.ed_out_params = EdOutParams()
		self.add_param('ed_out_params:SumPrint', val=False)
		self.add_param('ed_out_params:OutFile', val=0)
		self.add_param('ed_out_params:TabDelim', val=False)
		self.add_param('ed_out_params:OutFmt', val='')
		self.add_param('ed_out_params:TStart', val=0.0)
		self.add_param('ed_out_params:DecFact', val=0.0)
		self.add_param('ed_out_params:NTwGages', val=0)
		self.add_param('ed_out_params:TwrGagNd', val=[])
		self.add_param('ed_out_params:NBlGages', val=0)
		self.add_param('ed_out_params:BldGagNd', val=[])

                ##################:
		# Wind vartrees
                ###################
		#self.inflow_wind = InflowWind()
		self.add_param('inflow_wind:Echo', val=False)
		self.add_param('inflow_wind:WindType', val=0)
		self.add_param('inflow_wind:PropagationDir', val=0.)
		self.add_param('inflow_wind:NWindVel', val=0)
		self.add_param('inflow_wind:WindVxiList', val=0.)
		self.add_param('inflow_wind:WindVyiList', val=0.)
		self.add_param('inflow_wind:WindVziList', val=0.)

		#self.steady_wind_params = SteadyWindParams()
		self.add_param('steady_wind_params:HWindSpeed', val=0.)
		self.add_param('steady_wind_params:RefHt', val=0.)
		self.add_param('steady_wind_params:PLexp', val=0.)

		#self.uniform_wind_params = UniformWindParams()
		self.add_param('uniform_wind_params:Filename', val='')
		self.add_param('uniform_wind_params:RefHt', val=0.)
		self.add_param('uniform_wind_params:RefLength', val=0.)

		#self.turbsim_wind_params = TurbSimWindParams()
		self.add_param('turbsim_wind_params:Filename', val='')

		#self.bladed_wind_params = BladedWindParams()
		self.add_param('bladed_wind_params:FilenameRoot', val='')
		self.add_param('bladed_wind_params:TowerFile', val=False)

		#self.hawc_wind_params = HAWCWindParams()
		self.add_param('hawc_wind_params:FileName_u', val='')
		self.add_param('hawc_wind_params:FileName_v', val='')
		self.add_param('hawc_wind_params:FileName_w', val='')
		self.add_param('hawc_wind_params:nx', val=0)
		self.add_param('hawc_wind_params:ny', val=0)
		self.add_param('hawc_wind_params:nz', val=0)
		self.add_param('hawc_wind_params:dx', val=0.)
		self.add_param('hawc_wind_params:dy', val=0.)
		self.add_param('hawc_wind_params:dz', val=0.)
		self.add_param('hawc_wind_params:RefHt', val=0.)
		self.add_param('hawc_wind_params:ScaleMethod', val=0)
		self.add_param('hawc_wind_params:SFx', val=0.)
		self.add_param('hawc_wind_params:SFy', val=0.)
		self.add_param('hawc_wind_params:SFz', val=0.)
		self.add_param('hawc_wind_params:SigmaFx', val=0.)
		self.add_param('hawc_wind_params:SigmaFy', val=0.)
		self.add_param('hawc_wind_params:SigmaFz', val=0.)
		self.add_param('hawc_wind_params:URef', val=0.)
		self.add_param('hawc_wind_params:WindProfile', val=0)
		self.add_param('hawc_wind_params:PLExp', val=0.)
		self.add_param('hawc_wind_params:Z0', val=0.)


		#self.inflow_out_params = Inflow:utParams()
		self.add_param('inflow_out_params:SumPrint', val=False)

		#self.wnd_wind = WndWind()
		self.add_param('wnd_wind:TimeSteps', val=0)
		self.add_param('wnd_wind:Time', val=zeros([1]))
		self.add_param('wnd_wind:HorSpd', val=zeros([1]))
		self.add_param('wnd_wind:WindDir', val=zeros([1]))
		self.add_param('wnd_wind:VerSpd', val=zeros([1]))
		self.add_param('wnd_wind:HorShr', val=zeros([1]))
		self.add_param('wnd_wind:VerShr', val=zeros([1]))
		self.add_param('wnd_wind:LnVShr', val=zeros([1]))
		self.add_param('wnd_wind:GstSpd', val=zeros([1]))

                ###################
		# AeroDyn vartrees
                ###################
		#self.aerodyn = AeroDyn()
		self.add_param('aerodyn:SysUnits', val='SI')
		self.add_param('aerodyn:StallMod', val='BEDOES')
		self.add_param('aerodyn:UseCM', val='NO_CM')
		self.add_param('aerodyn:InfModel', val='EQUIL')
		self.add_param('aerodyn:IndModel', val='SWIRL')
		self.add_param('aerodyn:AToler', val=0.)
		self.add_param('aerodyn:TLModel', val='PRANDtl')
		self.add_param('aerodyn:HLModel', val='PRANDTl')
		self.add_param('aerodyn:WindFile', val='')
		self.add_param('aerodyn:wind_file_type', val='hh')
		self.add_param('aerodyn:HH', val=0.)
		self.add_param('aerodyn:TwrShad', val=0.)
		self.add_param('aerodyn:ShadHWid', val=9999.9)
		self.add_param('aerodyn:T_Shad_Refpt', val=9999.9)
		self.add_param('aerodyn:AirDens', val=1.225)
		self.add_param('aerodyn:KinVisc', val=1.464e-5)
		self.add_param('aerodyn:DTAero', val=0.02479)

		#self.blade_aero = AeroDynBlade()
		self.add_param('blade_aero:NumFoil', val=0)
		self.add_param('blade_aero:FoilNm', val=zeros([1]))
		self.add_param('blade_aero:af_data', val=[])
		self.add_param('blade_aero:BldNodes', val=zeros([1]))
		self.add_param('blade_aero:AeroTwst', val=zeros([1]))
		self.add_param('blade_aero:DRNodes', val=zeros([1]))
		self.add_param('blade_aero:Chord', val=zeros([1]))
		self.add_param('blade_aero:NFoil', val=zeros([1]))
		self.add_param('blade_aero:PrnElm', val=zeros([1]))

                ###################
		# ServoDyn vartrees
                ###################
		#self.sd_sim_ctrl = SdSimCtrl()
		self.add_param('sd_sim_ctrl:Echo', val=False)
		self.add_param('sd_sim_ctrl:DT', val=0.)
                
		#self.pitch_ctrl = PitchCtrl()
		self.add_param('pitch_ctrl:PCMode', val=0)
		self.add_param('pitch_ctrl:TPCOn', val=0.)
		self.add_param('pitch_ctrl:TPitManS1', val=0.)
		self.add_param('pitch_ctrl:TPitManS2', val=0.)
		self.add_param('pitch_ctrl:TPitManS3', val=0.)
		self.add_param('pitch_ctrl:TPitManE1', val=0.)
		self.add_param('pitch_ctrl:TPitManE2', val=0.)
		self.add_param('pitch_ctrl:TPitManE3', val=0.)
		self.add_param('pitch_ctrl:PitManRat1', val=0.)
		self.add_param('pitch_ctrl:PitManRat2', val=0.)
		self.add_param('pitch_ctrl:PitManRat3', val=0.)
		self.add_param('pitch_ctrl:BlPitchF1', val=0.)
		self.add_param('pitch_ctrl:BlPitchF2', val=0.)
		self.add_param('pitch_ctrl:BlPitchF3', val=0.)
		self.add_param('pitch_ctrl:BlPitch1', val=0.)
		self.add_param('pitch_ctrl:BlPitch2', val=0.)

		#self.gen_torq_ctrl = GenTorqCtrl()
		self.add_param('gen_torq_ctrl:VSContrl', val=0)
		self.add_param('gen_torq_ctrl:GenModel', val=0)
		self.add_param('gen_torq_ctrl:GenEff', val=0.)
		self.add_param('gen_torq_ctrl:GenTiStr', val=False)
		self.add_param('gen_torq_ctrl:GenTiStp', val=False)
		self.add_param('gen_torq_ctrl:SpdGenOn', val=0.)
		self.add_param('gen_torq_ctrl:TimGenOn', val=0.)
		self.add_param('gen_torq_ctrl:TimGenOf', val=0.)

		#self.var_speed_torq_ctrl = VarSpeedTorqCtrl()
                self.add_param('var_speed_torq_ctrl:VS_RtGnSp', val=0.)
                self.add_param('var_speed_torq_ctrl:VS_RtTq', val=0.)
                self.add_param('var_speed_torq_ctrl:VS_Rgn2K', val=0.)
                self.add_param('var_speed_torq_ctrl:VS_SlPc', val=0.)

		#self.induct_gen = InductGen()
		self.add_param('induct_gen:SIG_SlPc', val=0.)
		self.add_param('induct_gen:SIG_SySp', val=0.)
		self.add_param('induct_gen:SIG_RtTq', val=0.)
		self.add_param('induct_gen:SIG_PORt', val=0.)

		#self.theveq_induct_gen = ThevEqInductGen()
		self.add_param('theveq_induct_gen:TEC_Freq', val=0.)
		self.add_param('theveq_induct_gen:TEC_NPol', val=0)
		self.add_param('theveq_induct_gen:TEC_SRes', val=0.)
		self.add_param('theveq_induct_gen:TEC_RRes', val=0.)
		self.add_param('theveq_induct_gen:TEC_VLL', val=0.)
		self.add_param('theveq_induct_gen:TEC_SLR', val=0.)
		self.add_param('theveq_induct_gen:TEC_RLR', val=0.)
		self.add_param('theveq_induct_gen:TEC_MR', val=0.)

		#self.shaft_brake = ShaftBrake()
		self.add_param('shaft_brake:HSSBrMode', val=0)
		self.add_param('shaft_brake:THSSBrDp', val=0.)
		self.add_param('shaft_brake:HSSBrDT', val=0.)
		self.add_param('shaft_brake:HSSBrTqF', val=0.)

		#self.nac_yaw_ctrl = NacYawCtrl()
		self.add_param('nac_yaw_ctrl:YCMode', val=0)
		self.add_param('nac_yaw_ctrl:TYCOn', val=0.)
		self.add_param('nac_yaw_ctrl:YawNeut', val=0.)
		self.add_param('nac_yaw_ctrl:YawSpr', val=0.)
		self.add_param('nac_yaw_ctrl:YawDamp', val=0.)
		self.add_param('nac_yaw_ctrl:TYawManS', val=0.)
		self.add_param('nac_yaw_ctrl:YawManRat', val=0.)
		self.add_param('nac_yaw_ctrl:NacYawF', val=0.)

		#self.tip_brake = TipBrake()
		self.add_param('tip_brake:TiDynBrk', val=0.)
		self.add_param('tip_brake:TTpBrDp1', val=0.)
		self.add_param('tip_brake:TTpBrDp2', val=0.)
		self.add_param('tip_brake:TTpBrDp3', val=0.)
		self.add_param('tip_brake:TBDepISp1', val=0.)
		self.add_param('tip_brake:TBDepISp2', val=0.)
		self.add_param('tip_brake:TBDepISp3', val=0.)
		self.add_param('tip_brake:TBDrConN', val=0.)
		self.add_param('tip_brake:TBDrConD', val=0.)
		self.add_param('tip_brake:TpBrDT', val=0.)

		#self.tuned_mass_damper = TunedMassDamp()
		self.add_param('tuned_mass_damper:CompNTMD', val=0.)
		self.add_param('tuned_mass_damper:NTMDfile', val='')
		self.add_param('tuned_mass_damper:CompTTMD', val=0.)
		self.add_param('tuned_mass_damper:TTMDfile', val='')

		#self.bladed_interface = BladedInterface()
		self.add_param('bladed_interface:DLL_FileName', val='')
		self.add_param('bladed_interface:DLL_InFile', val='')
		self.add_param('bladed_interface:DLL_ProcName', val='')
		self.add_param('bladed_interface:DLL_DT', val='')
		self.add_param('bladed_interface:DLL_Ramp', val=False)
		self.add_param('bladed_interface:BPCutoff', val=0.)
		self.add_param('bladed_interface:NacYaw_North', val=0.)
		self.add_param('bladed_interface:Ptch_Cntrl', val=0.)
		self.add_param('bladed_interface:Ptch_SetPnt', val=0.)
		self.add_param('bladed_interface:Ptch_Min', val=0.)
		self.add_param('bladed_interface:Ptch_Max', val=0.)
		self.add_param('bladed_interface:PtchRate_Min', val=0.)
		self.add_param('bladed_interface:PtchRate_Max', val=0.)
		self.add_param('bladed_interface:Gain_OM', val=0.)
		self.add_param('bladed_interface:GenSpd_MinOM', val=0.)
		self.add_param('bladed_interface:GenSpd_MaxOM', val=0.)
		self.add_param('bladed_interface:GenSpd_Dem', val=0.)
		self.add_param('bladed_interface:GenPwr_Dem', val=0.)
		self.add_param('bladed_interface:DLL_NumTrq', val=0.)
		self.add_param('bladed_interface:GenSpd_TLU', val=zeros([0]))
		self.add_param('bladed_interface:GenTrq_TLU', val=zeros([0]))

		#self.sd_out_params = SdOutParams()
		self.add_param('sd_out_params:SumPrint', val=False)
		self.add_param('sd_out_params:OutFile', val=0)
		self.add_param('sd_out_params:TabDelim', val=False)
		self.add_param('sd_out_params:OutFmt', val='')
		self.add_param('sd_out_params:TStart', val=0.)
		
		# List of Outputs (all input files -- FST, ED, SD)
		# TODO: Update FstOutput for a few new outputs in FAST8
		#self.outlist = FstOutput()   # 
		self.add_param('outlist:description', val='')











